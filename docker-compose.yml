services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api
    restart: unless-stopped
    volumes:
      - ./api:/app
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - db
    env_file:
      - ./api/.env
  db:
    image: postgres
    container_name: postgres
    networks:
      - app-network
    volumes:
      - db-volume:/var/lib/postgresql/data
    env_file:
      - ./.env

  listener:
    build:
      context: ./listener
      dockerfile: Dockerfile
    container_name: listener
    restart: unless-stopped
    volumes:
      - ./listener:/app
    networks:
      - app-network
    depends_on:
      - api
    env_file:
      - ./listener/.env

  requests:
    build:
      context: ./requests
      dockerfile: Dockerfile
    container_name: requests
    restart: unless-stopped
    volumes:
      - ./requests:/app
    ports:
      - "8000:8000"
    networks:
      - app-network
    depends_on:
      - api
    env_file:
      - ./requests/.env
  
  validations:
    build:
      context: ./validations
      dockerfile: Dockerfile
    container_name: validations
    restart: unless-stopped
    volumes:
      - ./validations:/app
    ports:
      - "9000:9000"
    networks:
      - app-network
    depends_on:
      - api
    env_file:
      - ./validations/.env
  
  jobs-master:
    build:
      context: ./recommendation-service/jobsMaster
      dockerfile: Dockerfile
    container_name: jobs-master
    restart: unless-stopped
    volumes:
      - ./recommendation-service/jobsMaster:/app
    ports:
      - "4000:4000"
    networks:
      - worker
      - app-network
    depends_on:
      - redis
    env_file:
      - ./recommendation-service/jobsMaster/.env
    environment:
      - REDIS_PORT=6379
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}

  workers:
    build:
      context: ./recommendation-service/workers
      dockerfile: Dockerfile
    container_name: workers
    restart: unless-stopped
    volumes:
      - ./recommendation-service/workers:/app
    networks:
      - worker
      - app-network
    depends_on:
      - redis
    env_file:
      - ./recommendation-service/workers/.env
    environment:
      - REDIS_PORT=6379
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
  
  redis:
    image: redis
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    networks:
      - worker
    env_file:
      - ./.env
  
networks:
  app-network:
    driver: bridge
  worker:
    driver: bridge

volumes:
  db-volume:
